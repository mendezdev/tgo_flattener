// Code generated by MockGen. DO NOT EDIT.
// Source: flat_storage.go

// Package flattener is a generated GoMock package.
package flattener

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	apierrors "github.com/mendezdev/tgo_flattener/apierrors"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// create mocks base method.
func (m *MockStorage) create(arg0 FlatInfo) apierrors.RestErr {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "create", arg0)
	ret0, _ := ret[0].(apierrors.RestErr)
	return ret0
}

// create indicates an expected call of create.
func (mr *MockStorageMockRecorder) create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "create", reflect.TypeOf((*MockStorage)(nil).create), arg0)
}

// getAll mocks base method.
func (m *MockStorage) getAll() ([]FlatInfo, apierrors.RestErr) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getAll")
	ret0, _ := ret[0].([]FlatInfo)
	ret1, _ := ret[1].(apierrors.RestErr)
	return ret0, ret1
}

// getAll indicates an expected call of getAll.
func (mr *MockStorageMockRecorder) getAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getAll", reflect.TypeOf((*MockStorage)(nil).getAll))
}
